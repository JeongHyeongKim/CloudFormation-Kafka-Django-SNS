{
    "AWSTemplateFormatVersion" : "2010-09-09",
    "Parameters" : {
        "KeyName": {
            "Description" : "Name of an existing EC2 KeyPair to enable SSH access to the instance",
            "Type": "AWS::EC2::KeyPair::KeyName",
            "ConstraintDescription" : "must be the name of an existing EC2 KeyPair."
            },

        "VPC-CIDR" : {
            "Description" : "Insert your VPC CIDR for Kafka-sample. Default is 200.0.0.0/16",
            "Type": "string",
            "MinLength": "9",
            "MaxLength": "18",
            "Default": "200.0.0.0/16",
            "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
            "ConstraintDescription": "must be a valid IP CIDR range of the form x.x.x.x/x."
        },
        "PublicSubnet-CIDR" : {
            "Description" : "Insert your Public Subnet CIDR for Kafka-Sample. Defalut is 200.0.0.0/24",
            "Type" : "string",
            "MinLength": "9",
            "MaxLength": "18",
            "Default": "200.0.0.0/24",
            "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
            "ConstraintDescription": "must be a valid IP CIDR range of the form x.x.x.x/x."

        },
        
        "NamePrefix" : {
            "Description" : "Insert your Amazon Resource Name prefix. Default is Kafka-sample.",
            "Type": "string",
            "MinLength": "1",
            "MaxLength": "10",
            "Default": "Kafka-sample",
            "ConstraintDescription": "Exceed MaxLength 10"
        }
  },


  "Resources":{
            "vpc" : {
                "Type" : "AWS::EC2::VPC",
                "Properties" : {
                    "CidrBlock" : {"Ref" :"VPC-CIDR"},
                    "EnableDnsHostnames" : "true",
                    "EnableDnsSupport" : "true",
                    "Tags" : [ {"Key" : "Name", "Value" : {"Fn::Join" : ["-",[{"Ref":"NamePrefix"},"VPC"] ]}  } ]
                }
            },

            "publicsubnet" : {
                "Type" : "AWS::EC2::Subnet",
                "Properties" : {
                    "VpcId" : { "Ref" : "vpc" },
                    "CidrBlock" : {"Ref" :"PublicSubnet-CIDR"},
                    "AvailabilityZone" : "ap-northeast-2a",
                    "Tags" : [ {"Key" : "Name", "Value" : {"Fn::Join" : ["-",[{"Ref":"NamePrefix"},"public-2a-1"] ]}}]
                }
            },

            "igw":{
                "Type" : "AWS::EC2::InternetGateway",
                "Properties" : {
                    "Tags" :  [ {"Key" : "Name", "Value" : {"Fn::Join" : ["-",[{"Ref":"NamePrefix"},"igw"] ]}}]
                }
            },

            "igwAttach":{
                "Type" : "AWS::EC2::VPCGatewayAttachment",
                "Properties" : {
                    "InternetGatewayId" : {"Ref" : "igw"},
                    "VpcId" : {"Ref" : "vpc"}
                }
            },

            "nacl":{
                "Type" : "AWS::EC2::NetworkAcl",
                "Properties" : {
                    "Tags" : [ {"Key" : "Name", "Value" : {"Fn::Join" : ["-",[{"Ref":"NamePrefix"},"nacl"] ]}}],
                    "VpcId" : {Ref : "vpc"}
                    }
            },

            "naclentry":{
                "Type" : "AWS::EC2::NetworkAclEntry",
                "Properties" : {
                    "NetworkAclId" : {"Ref" : "nacl"},
                    "RuleNumber" : "100",
                    "Protocol" : "-1",
                    "RuleAction" : "allow",
                    "Egress" : "true",
                    "CidrBlock" : "0.0.0.0/0"
                }
            },

            "naclAssoc" : {
                "Type" : "AWS::EC2::SubnetNetworkAclAssociation",
                "Properties" : {
                    "NetworkAclId" : {"Ref" : "naclentry"},
                    "SubnetId" : {"Ref" : "publicsubnet"}
                    }
            },

            "RouteTable":{
                "Type" : "AWS::EC2::RouteTable",
                "Properties" : {
                    "Tags" : [ {"Key" : "Name", "Value" : {"Fn::Join" : ["-",[{"Ref":"NamePrefix"},"publicRT"] ]}}],
                    "VpcId" : {"Ref" : "vpc"}
                    }
            },

            "RouteTableAssoc" : {
                "Type" : "AWS::EC2::SubnetRouteTableAssociation",
                "Properties" : {
                    "RouteTableId" : {"Ref" : "RouteTable"},
                    "SubnetId" : {"Ref" : "publicsubnet"}
                    }
            },

            시큐리티그룹 작업 해야함.
            https://docs.aws.amazon.com/ko_kr/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group.html








  }




}